Commands used:
  -  'cat' displays the content of a specified file. (head and tail are alternates)
  - 'sha256sum <file>' creates a hash for the  given file or directory using <directory>/*
  - 'grep' used to search through a specified file,folder,directory for a specified key

Thought Process:
  - Started by using the cat command to look at each of the files to see what I was working with
  - tried to use grep on the files folder using the checksum.txt file as the key
  - created a hash of the checksum file and sent it to its own file
  - tried using cat and a pipe to send my hashed checksum file to grep and search through the file folder but it did not work
  - tried using grep with the hashed checksum directly in the files folder. Nothing was returned and I am going to see if maybe I did not need to run the sha256sum command on the checksum file.
  - ran sha256sum on files/* and piped it to grep "" where the key from grep is the contents of the checksum.txt file and it returned one of the files in the files directory
  - ran decrypt.sh sending file path of the returned file from the grep as the argument
  - returned flag of picoCTF{trust_but_verify_451fd69b}
  - overall it was not very hard to realize that I needed to use grep it was just the minuteness of what exactly to grep that led to me getting stuck

Challenge description:
  - People keep trying to trick my players with imitation flags. I want to make sure they get the real thing! I'm going to provide the SHA-256 hash and a decrypt script to help you know that my flags are legitimate.
Additional details will be available after launching your challenge instance.

Author:
  -  Jeffery John

classifications: Easy, forensics, grep, checksum, picoCTF 2024, browser_webshell_solvable

Hints from the challenge:
  - checksums let you tell if a file is complete and from the original distributor. If the hash doesn't match, it's a different file.
  - You can create a SHA checksum of a file with sha256sum <file> or all files in a directory with sha256sum <directory>/*.
  - Remember you can pipe the output of one command to another with |. Try practicing with the 'First Grep' challenge if you're stuck!

